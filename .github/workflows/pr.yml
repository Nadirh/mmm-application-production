name: Pull Request

on:
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Set up environment variables
      run: |
        cp .env.example .env
        echo "REDIS_URL=redis://localhost:6379" >> .env
        echo "DATABASE_URL=sqlite:///./test_mmm.db" >> .env
        echo "MMM_ENV=testing" >> .env
    
    - name: Run code formatting check
      run: |
        black --check --diff src/ tests/
    
    - name: Run import sorting check
      run: |
        isort --check-only --diff src/ tests/
    
    - name: Run linting
      run: |
        flake8 src/ tests/ --max-line-length=100 --ignore=E203,W503
    
    - name: Run type checking
      run: |
        mypy src/mmm --ignore-missing-imports --no-strict-optional
    
    - name: Run security checks
      run: |
        bandit -r src/ --severity-level medium
        safety check
    
    - name: Run database migrations
      run: |
        alembic upgrade head
    
    - name: Run fast test suite
      run: |
        pytest tests/ -x --tb=short -q --durations=10
      env:
        PYTHONPATH: ${{ github.workspace }}/src
    
    - name: Build Docker image
      run: |
        docker build -t mmm-application:pr-${{ github.event.number }} .
    
    - name: Test Docker image
      run: |
        docker run --rm --name test-mmm-pr -d -p 8002:8000 mmm-application:pr-${{ github.event.number }}
        sleep 10
        curl -f http://localhost:8002/ || exit 1
        docker stop test-mmm-pr

  size-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Check changed files
      run: |
        echo "Files changed in this PR:"
        git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.sha }}
        
        echo "Lines added/removed:"
        git diff --stat ${{ github.event.pull_request.base.sha }}..${{ github.sha }}
    
    - name: Check PR size
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.sha }} | wc -l)
        CHANGED_LINES=$(git diff --shortstat ${{ github.event.pull_request.base.sha }}..${{ github.sha }} | grep -oE '[0-9]+ insertion|[0-9]+ deletion' | grep -oE '[0-9]+' | paste -sd+ | bc || echo 0)
        
        echo "Changed files: $CHANGED_FILES"
        echo "Changed lines: $CHANGED_LINES"
        
        if [ "$CHANGED_FILES" -gt 50 ]; then
          echo "⚠️ Large PR: $CHANGED_FILES files changed"
          echo "Consider breaking this into smaller PRs"
        fi
        
        if [ "$CHANGED_LINES" -gt 1000 ]; then
          echo "⚠️ Large PR: $CHANGED_LINES lines changed"
          echo "Consider breaking this into smaller PRs"
        fi